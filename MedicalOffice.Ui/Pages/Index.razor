@page "/"
@inject IJSRuntime _jSRuntime
<PageTitle>
    دندان پزشکی
</PageTitle>

@if (IsPageLoading)
{
    <div class="loader-container">
        <div class="loader"></div>
    </div>
}


<SliderComponent IsComponentLoading="GetIsSliderLoading" />
 <ReservationComponent IsComponentLoading="GetIsReservationLoading" />
<InformationComponent IsComponentLoading="GetIsInformationLoading" />
<MyServiciesComponent IsComponentLoading="GetIsServicesLoading" />
<WorksComponent IsComponentLoading="GetIsWorksLoading" /> 

@code {


    private bool IsSliderLoading = true;
    private bool IsReservationLoading = true;
    private bool IsInformationLoading = true;
    private bool IsServicesLoading = true;
    private bool IsWorksLoading = true;

    public bool IsPageLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        UpdatePageLoading();
    }



    private void GetIsSliderLoading(bool value)
    {
        IsSliderLoading = value;
        UpdatePageLoading();
    }

    private void GetIsReservationLoading(bool value)
    {
        IsReservationLoading = value;
        UpdatePageLoading();
    }

    private void GetIsInformationLoading(bool value)
    {
        IsInformationLoading = value;
        UpdatePageLoading();
    }

    private void GetIsServicesLoading(bool value)
    {
        IsServicesLoading = value;
        UpdatePageLoading();
    }

    private void GetIsWorksLoading(bool value)
    {
        IsWorksLoading = value;
        UpdatePageLoading();
    }

    private void UpdatePageLoading()
    {
       
        IsPageLoading = IsSliderLoading &&
                        IsReservationLoading &&
                        IsInformationLoading &&
                        IsServicesLoading &&
                        IsWorksLoading;

        // هر بار که متغیرها تغییر می‌کنند، این متد فراخوانی شود.
        StateHasChanged();
    }



}















